/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ordering.system;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.Closeable;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ROG
 */
public class customer_payment extends javax.swing.JFrame {

    // define total_paymment as double 
    double total_payment;
    // define totalPayment as string
    String totalPayment;
    
    // define id as login user_id
    Login lg = new Login();
    String id = lg.user_id;
    /**
     * Creates new form customer_payment
     */
    public customer_payment() {
        initComponents();
        // set the JFrame to center position
        this.setLocationRelativeTo(null);
        
        // disable pay button
        pay_button.setEnabled(false);
        
        welcome_label.setText("Here's your order summary Customer: "+id);
        
        // export order.txt to read 
        File export_file = new File("order.txt");
        try {
            BufferedReader br = new BufferedReader (new FileReader(export_file));
            DefaultTableModel summaryModel = (DefaultTableModel)summary_table.getModel();
            String line;
            while ((line = br.readLine()) != null) {
                // add the order data to the JTable if the order not yet pay
                if(line.contains(id) && line.contains("No")) {
                    String[] dataRow = line.split(",");
                    summaryModel.addRow(dataRow);
                    
                    // sum the total price of the order
                    int sum = 0;
                    for (int j = 0; j < summary_table.getRowCount(); j++) {
                        int a = Integer.parseInt((String)summary_table.getValueAt(j, 3));
                        sum += a;
                    }
                    // service charge formula
                    double service_charge = sum * 0.06;
                    // convert double to string 
                    String serviceCharge = Double.toString(service_charge);
                    // total payment formula
                    total_payment = sum + service_charge;
                    // convert double to string
                    String totalPayment = Double.toString(total_payment);
                    // print the specific data to the text field
                    totalPrice_jField.setText("RM " + String.valueOf(sum));
                    serviceCharge_jField.setText("RM " + serviceCharge.format("%.2f", service_charge));
                    totalPayment_jField.setText("RM " + totalPayment.format("%.2f", total_payment));
                }
            }
            
        } catch (FileNotFoundException ex) {
        } catch (IOException ex) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        welcome_label = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        food13 = new javax.swing.JLabel();
        totalPrice_jField = new javax.swing.JLabel();
        food14 = new javax.swing.JLabel();
        serviceCharge_jField = new javax.swing.JLabel();
        food15 = new javax.swing.JLabel();
        totalPayment_jField = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        food16 = new javax.swing.JLabel();
        food17 = new javax.swing.JLabel();
        balance_jField = new javax.swing.JLabel();
        totalPaid_txtField = new javax.swing.JTextField();
        pay_button = new javax.swing.JButton();
        back_button = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        summary_table = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        receipt_txtArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 2, 48)); // NOI18N
        jLabel1.setText("Payment");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        welcome_label.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        food13.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        food13.setText("Total Price:");

        totalPrice_jField.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        food14.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        food14.setText("Service Charge (6%):");

        serviceCharge_jField.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        food15.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        food15.setText("Total Payment:");

        totalPayment_jField.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(food14, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(food13, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(serviceCharge_jField, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                            .addComponent(totalPrice_jField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(food15, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalPayment_jField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(food13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalPrice_jField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(food14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serviceCharge_jField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(food15, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                    .addComponent(totalPayment_jField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        food16.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        food16.setText("Total Paid:");

        food17.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        food17.setText("Balance:");

        balance_jField.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        totalPaid_txtField.setText("--Insert Pay Amount--");
        totalPaid_txtField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                totalPaid_txtFieldMouseClicked(evt);
            }
        });
        totalPaid_txtField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                totalPaid_txtFieldKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(food17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(food16, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(balance_jField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(totalPaid_txtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(food16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalPaid_txtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(food17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(balance_jField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pay_button.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        pay_button.setText("Pay");
        pay_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pay_buttonActionPerformed(evt);
            }
        });

        back_button.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        back_button.setText("Back");
        back_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_buttonActionPerformed(evt);
            }
        });

        summary_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Price", "Quantity", "TotalPrice", "OrderID"
            }
        ));
        summary_table.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(summary_table);

        receipt_txtArea.setColumns(20);
        receipt_txtArea.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        receipt_txtArea.setRows(5);
        jScrollPane1.setViewportView(receipt_txtArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(350, 350, 350)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(welcome_label, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(90, 90, 90)
                                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(110, 110, 110)
                                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(174, 174, 174)
                                .addComponent(pay_button)
                                .addGap(18, 18, 18)
                                .addComponent(back_button)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(welcome_label, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pay_button)
                            .addComponent(back_button)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // set the text field to null when mouse clicked
    private void totalPaid_txtFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_totalPaid_txtFieldMouseClicked
        // TODO add your handling code here:
        totalPaid_txtField.setText(null);
    }//GEN-LAST:event_totalPaid_txtFieldMouseClicked

    // calculate balance formula
    private void totalPaid_txtFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalPaid_txtFieldKeyReleased
        // TODO add your handling code here:
        double b = Integer.parseInt(totalPaid_txtField.getText());
        double c = b - total_payment;
        String balance = Double.toString(c);
        balance_jField.setText("RM " + balance.format("%.2f", c));

        // after insert the total paid amount then the pay button enabled
        if (b > total_payment) {
            pay_button.setEnabled(true);
        } else {
            pay_button.setEnabled(false);
        }
    }//GEN-LAST:event_totalPaid_txtFieldKeyReleased

    // pay button action
    private void pay_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pay_buttonActionPerformed
        // TODO add your handling code here:
        
        String orderID = null;
        // define oldfile and tempfile of payment file
        String oldFileName = "payment.txt";
        String tmpFileName = "lPayment.txt";
        // define oldfile and tempfile of order file 
        String oldFileName1 = "order.txt";
        String tmpFileName1 = "lOrder.txt";
        
        // define buffered reader and writer of payment file
        BufferedReader br = null;
        BufferedWriter bw = null;
        // define buffered reader and writer of order file
        BufferedReader br1 = null;
        BufferedWriter bw1 = null;
        
        // read all the details of oldfile and write to tempfile
         try {  
            br = new BufferedReader(new FileReader(oldFileName));
            bw = new BufferedWriter(new FileWriter(tmpFileName));
            br1 = new BufferedReader(new FileReader(oldFileName1));
            bw1 = new BufferedWriter(new FileWriter(tmpFileName1));
            // open file receipt.txt to write
            BufferedWriter bw2 = new BufferedWriter (new FileWriter("receipt.txt", true));

            // read payment file and replace
            String line;
            while ((line = br.readLine()) != null) {
                String paymentData [] = line.split(",");
                if (line.contains(id)) {
                    // replace not yet payment "No" with "Yes"
                    if (line.contains("No")) {
                        orderID = paymentData[3];
                        line = line.replace("No", "Yes");
                        } 
                } 
                bw.write(line+"\n");
            }
            JOptionPane.showMessageDialog(this, "Payment Successful");
            
            // read order file and replace
            String line1;
            while ((line1 = br1.readLine()) != null) {
                if (line1.contains(id)) {
                    // replace not yet payment "No" with "Yes"
                    if (line1.contains("No")) {
                        line1 = line1.replace("No", "Yes");
                        }
                    }
                bw1.write(line1+"\n");
            }

            // receipt design for receipt text area
            receipt_txtArea.setText(receipt_txtArea.getText() + "*                           Customer ID                         *\n");
            receipt_txtArea.setText(receipt_txtArea.getText() + "******************************************\n");
            receipt_txtArea.setText(receipt_txtArea.getText() + "*                               "+id+"                              *\n");
            receipt_txtArea.setText(receipt_txtArea.getText() + "******************************************\n");
            receipt_txtArea.setText(receipt_txtArea.getText() + "*                         Cafeteria Receipt                     *\n");
            receipt_txtArea.setText(receipt_txtArea.getText() + "******************************************\n");
            receipt_txtArea.setText(receipt_txtArea.getText() + "*                            Item Name                           *\n");
            receipt_txtArea.setText(receipt_txtArea.getText() + "******************************************\n");
            receipt_txtArea.setText(receipt_txtArea.getText() + "*                              Order ID                            *\n");
            receipt_txtArea.setText(receipt_txtArea.getText() + "******************************************\n");
            receipt_txtArea.setText(receipt_txtArea.getText() + "*                              "+orderID+"                             *\n");
            receipt_txtArea.setText(receipt_txtArea.getText() + "******************************************\n");
            for (int i = 0; i < summary_table.getRowCount(); i++) {
                receipt_txtArea.setText(receipt_txtArea.getText() + ""+ summary_table.getValueAt(i, 2).toString() +" "+ summary_table.getValueAt(i, 0).toString() +"                                 \n");
                receipt_txtArea.setText(receipt_txtArea.getText() + "                                                    Total : RM "+ summary_table.getValueAt(i, 3).toString() +"      \n");
            }
            receipt_txtArea.setText(receipt_txtArea.getText() + "******************************************\n");
            receipt_txtArea.setText(receipt_txtArea.getText() + "Total Amount:                                       "+totalPrice_jField.getText()+"\n");
            receipt_txtArea.setText(receipt_txtArea.getText() + "Service Charge:                                     "+serviceCharge_jField.getText()+"\n");
            receipt_txtArea.setText(receipt_txtArea.getText() + "Total Payment:                                     "+totalPayment_jField.getText()+"\n");
            receipt_txtArea.setText(receipt_txtArea.getText() + "Total Paid:                                           RM "+totalPaid_txtField.getText()+"\n");
            receipt_txtArea.setText(receipt_txtArea.getText() + "Balance:                                               "+balance_jField.getText()+"\n");
            receipt_txtArea.setText(receipt_txtArea.getText() + "******************************************\n");
            receipt_txtArea.setText(receipt_txtArea.getText() + "************   THANK YOU!!!!!    ***********\n");
            receipt_txtArea.setText(receipt_txtArea.getText() + "*******   PLEASE COME AGAIN!!!   *********\n");
            // date for the receipt
            Date obj = new Date();
            String date = obj.toString();
            receipt_txtArea.setText(receipt_txtArea.getText() + "\n" + date);
            
            // write all the details of receipt to file
            bw2.write(id+","+totalPrice_jField.getText()+","+serviceCharge_jField.getText()+","+totalPayment_jField.getText()+","+totalPaid_txtField.getText()+","+balance_jField.getText()+","+orderID+"\n");
            bw2.close();
            
            totalPaid_txtField.setEnabled(false);
            pay_button.setEnabled(false);
            
        } catch (Exception e) {
            return;
        } finally {
            try {
                //close br file
                if(br != null)
                    br.close();
            } catch (IOException e) {}
            try {
                // close bw file
                if(bw != null)
                    bw.close();
            } catch (IOException e) {}
            try {
                // close br1 file
                if(br1 != null)
                    br1.close();
            } catch (IOException e) {}
            try {
                // close bw1 file
                if(bw1!= null)
                    bw1.close();
            } catch (IOException e) {}
        }
         
        // define new buffered reader and writer of payment file
        BufferedReader brr = null;
        BufferedWriter bww = null;
        // define new buffered reader and writer of order file
        BufferedReader brr1 = null;
        BufferedWriter bww1 = null;
        // replace oldfile with tempfile
        try {
            brr = new BufferedReader(new FileReader(tmpFileName));
            bww = new BufferedWriter(new FileWriter(oldFileName));
            brr1 = new BufferedReader(new FileReader(tmpFileName1));
            bww1 = new BufferedWriter(new FileWriter(oldFileName1));
            int c=brr.read();
            while (c != -1){
                bww.write(c);
                c=brr.read();
            }
            int d=brr1.read();
            while (d != -1){
                bww1.write(d);
                d=brr1.read();
            }
        } catch(IOException e) {
            // it will shows the error line and class name where the exception occured
            e.printStackTrace();
        } finally {
            close(brr);
            close(bww);
            close(brr1);
            close(bww1);
        }
    }//GEN-LAST:event_pay_buttonActionPerformed

    // back to customer home page 
    private void back_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_buttonActionPerformed
        // TODO add your handling code here:
        this.dispose();
        customer_home ch = new customer_home();
        ch.setVisible(true);
    }//GEN-LAST:event_back_buttonActionPerformed

    // close the stream, else the underlying channel will remain open and then we would end up with a resource leak
    public static void close(Closeable stream) {
        if (stream != null) {
            try {
                stream.close();
            } catch (IOException ex) {
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(customer_payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(customer_payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(customer_payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(customer_payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new customer_payment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back_button;
    private javax.swing.JLabel balance_jField;
    private javax.swing.JLabel food13;
    private javax.swing.JLabel food14;
    private javax.swing.JLabel food15;
    private javax.swing.JLabel food16;
    private javax.swing.JLabel food17;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton pay_button;
    private javax.swing.JTextArea receipt_txtArea;
    private javax.swing.JLabel serviceCharge_jField;
    private javax.swing.JTable summary_table;
    private javax.swing.JTextField totalPaid_txtField;
    private javax.swing.JLabel totalPayment_jField;
    private javax.swing.JLabel totalPrice_jField;
    private javax.swing.JLabel welcome_label;
    // End of variables declaration//GEN-END:variables
}
