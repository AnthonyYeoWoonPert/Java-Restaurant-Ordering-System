/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ordering.system;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author ROG
 */
public class order_menu extends javax.swing.JFrame {
    
    double total_payment;
    
    // to get user id
    Login lg = new Login();
    String id = lg.user_id;
    
    // generate order id
    String line1;
    String GenerateID;
    public String OrderID_generate() {
        try (Scanner s = new Scanner(new BufferedReader(new FileReader("order.txt")))) {
            while (s.hasNext()) {
                line1 = s.nextLine();
            }
            if (line1 == null) {
                GenerateID = "OD0001";
            }
            else {
                for (int i = 1; i<10000; i++) {
                    GenerateID = "OD"+String.format("%04d",i);
                    if (line1.contains(GenerateID)) {
                        if (line1.contains("Yes")) {
                            GenerateID = "OD"+String.format("%04d", i+1);
                            break;
                        } else {
                            GenerateID = "OD"+String.format("%04d", i);
                            break;
                        }
                    }
                }
            }
            s.close();
        }
        catch (IOException ioe) {
            ioe.getStackTrace();
        }
        return GenerateID;
    }

    /**
     * Creates new form view_menu
     */
    public order_menu() {
        initComponents();
        // set the JFrame to center position
        this.setLocationRelativeTo(null);
        // disable the button or text field 
        foodQuantity.setEnabled(false);
        beverageQuantity.setEnabled(false);
        addFood.setEnabled(false);
        addBeverage.setEnabled(false);
        order_button.setEnabled(false);
        
        welcome_label.setText("Welcome Customer: "+id);
        
        // JTable
        DefaultTableModel foodModel = (DefaultTableModel)food_table.getModel();
        DefaultTableModel beverageModel = (DefaultTableModel)beverage_table.getModel();
        DefaultTableModel summaryModel = (DefaultTableModel)summary_table.getModel();

        // read item.txt file
        File file = new File("item.txt");
        try {
            BufferedReader br = new BufferedReader (new FileReader(file));
            Object[] tableLines = br.lines().toArray();
            for(int i = 0; i < tableLines.length; ++i)
            {
                String line = tableLines[i].toString().trim();
                if(line.contains("Food")){                
                    String[] dataRow = line.split(",");
                    foodModel.addRow(dataRow);
                } else if (line.contains("Beverage")) {
                    String[] dataRow = line.split(",");
                    beverageModel.addRow(dataRow);   
                } 
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(order_menu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(order_menu.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        food_table = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        beverage_table = new javax.swing.JTable();
        order_button = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        summary_table = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        addFood = new javax.swing.JButton();
        foodQuantity = new javax.swing.JTextField();
        addBeverage = new javax.swing.JButton();
        beverageQuantity = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        back_button = new javax.swing.JButton();
        welcome_label = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        food13 = new javax.swing.JLabel();
        totalPrice_jField = new javax.swing.JLabel();
        food14 = new javax.swing.JLabel();
        serviceCharge_jField = new javax.swing.JLabel();
        food15 = new javax.swing.JLabel();
        totalPayment_jField = new javax.swing.JLabel();
        food_nlab = new javax.swing.JLabel();
        beverage_nlab = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 2, 48)); // NOI18N
        jLabel1.setText("Menu");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Food");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Beverage");

        food_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "FoodID", "Name", "Price"
            }
        ));
        food_table.getTableHeader().setReorderingAllowed(false);
        food_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                food_tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(food_table);

        beverage_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BeverageID", "Name", "Price"
            }
        ));
        beverage_table.getTableHeader().setReorderingAllowed(false);
        beverage_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                beverage_tableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(beverage_table);

        order_button.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        order_button.setText("Order");
        order_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                order_buttonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel4.setText("Food Quantity:");

        summary_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Price", "Quantity", "TotalPrice", "OrderID"
            }
        ));
        summary_table.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(summary_table);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Order Summary");

        addFood.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        addFood.setText("Add Food");
        addFood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFoodActionPerformed(evt);
            }
        });

        foodQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                foodQuantityKeyReleased(evt);
            }
        });

        addBeverage.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        addBeverage.setText("Add Beverage");
        addBeverage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBeverageActionPerformed(evt);
            }
        });

        beverageQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                beverageQuantityKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel6.setText("Beverage Quantity:");

        back_button.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        back_button.setText("Back");
        back_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_buttonActionPerformed(evt);
            }
        });

        welcome_label.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        food13.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        food13.setText("Total Price:");

        totalPrice_jField.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        food14.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        food14.setText("Service Charge (6%):");

        serviceCharge_jField.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        food15.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        food15.setText("Total Payment:");

        totalPayment_jField.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(food14, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(food13, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(serviceCharge_jField, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                            .addComponent(totalPrice_jField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(food15, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalPayment_jField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(food13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalPrice_jField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(food14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serviceCharge_jField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(food15, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                    .addComponent(totalPayment_jField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        food_nlab.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        food_nlab.setForeground(java.awt.Color.red);

        beverage_nlab.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        beverage_nlab.setForeground(java.awt.Color.red);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(410, 410, 410)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(342, 342, 342)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(400, 400, 400)
                        .addComponent(order_button)
                        .addGap(29, 29, 29)
                        .addComponent(back_button))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(welcome_label, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(173, 173, 173)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(jLabel2)
                            .addGap(441, 441, 441)
                            .addComponent(jLabel3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(foodQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(addFood)
                                .addGap(210, 210, 210)
                                .addComponent(jLabel6))
                            .addComponent(food_nlab, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(beverageQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(addBeverage))
                            .addComponent(beverage_nlab, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(welcome_label, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addFood)
                        .addComponent(foodQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addBeverage)
                        .addComponent(beverageQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(food_nlab, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(beverage_nlab, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(order_button)
                    .addComponent(back_button))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // order button
    private void order_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_order_buttonActionPerformed
        // TODO add your handling code here:
        String orderID = OrderID_generate();
        
        File f = new File("payment.txt");
        File export_file = new File("order.txt");
        try {
            BufferedWriter bw = new BufferedWriter(new FileWriter(f,true));
            BufferedReader br = new BufferedReader(new FileReader(export_file));
            
            String line;
            while ((line = br.readLine()) != null) {
                if (line.contains(id) && line.contains("No")) {
                    bw.write(id+","+total_payment+","+"No"+","+orderID+"\n");
                    JOptionPane.showMessageDialog(this, "Order Successful");
                    this.dispose();
                    customer_payment cp = new customer_payment();
                    cp.setVisible(true);
                    bw.close();
                }
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(order_menu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(order_menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_order_buttonActionPerformed

    // add food button
    private void addFoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFoodActionPerformed
        // TODO add your handling code here:
        // define variables 
        String ordername = null;
        String price = null;
        String quantity = foodQuantity.getText();
        String totalPrice;
        String orderStatus  = "preparing";
        String orderID = OrderID_generate();
    
        // open order.txt file
        File f = new File ("order.txt");
        try {
            // get value from food JTable
            TableModel food_model = food_table.getModel();
            int [] index = food_table.getSelectedRows();
            Object [] row = new Object[3];
            for (int i = 0; i < index.length; i++) {
                ordername = food_model.getValueAt(index[i], 1).toString();
                price = food_model.getValueAt(index[i], 2).toString();
            }
            int a = Integer.parseInt(quantity);
            int b = Integer.parseInt(price);
            int c = b * a;
            totalPrice = String.valueOf(c);
            
            BufferedWriter bw = new BufferedWriter (new FileWriter(f,true));
            BufferedReader br = new BufferedReader (new FileReader(f));
            Order o = new Order(id, ordername, price, foodQuantity.getText(), totalPrice, orderStatus);
            bw.write(o.getOrderName()+","+o.getPrice()+","+o.getQuantity()+","+o.getTotalPrice()+","+orderID+","+o.getOrderStatus()+","+o.getCustomerID()+","+"No"+"\n");
            bw.close();
            JOptionPane.showMessageDialog(this, "Successful Add to order");
            // order summary JTable
            DefaultTableModel model = (DefaultTableModel)summary_table.getModel();
                model.setRowCount(0);
                String line;
                while((line=br.readLine())!=null){
                    if (line.contains(id) && line.contains("No")) {
                        String[] data = line.split(",");
                        model.addRow(data);
                    }
                }
                
            // sum the total price of the order 
            int sum = 0;
            for (int j = 0; j < summary_table.getRowCount(); j++) {
                int d = Integer.parseInt((String)summary_table.getValueAt(j, 3));
                sum += d;
            }
            // service charge formula
            double service_charge = sum * 0.06;
            // convert double to string 
            String serviceCharge = Double.toString(service_charge);
            // total payment formula
            total_payment = sum + service_charge;
            // convert double to string
            String totalPayment = Double.toString(total_payment);
            // print the specific data to the text field
            totalPrice_jField.setText("RM " + String.valueOf(sum));
            serviceCharge_jField.setText("RM " + serviceCharge.format("%.2f", service_charge));
            totalPayment_jField.setText("RM " + totalPayment.format("%.2f", total_payment));   

            foodQuantity.setText(null);
            food_table.clearSelection();
            order_button.setEnabled(true);

        } catch (FileNotFoundException ex) {
            Logger.getLogger(order_menu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(order_menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addFoodActionPerformed

    // add beverage button
    private void addBeverageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBeverageActionPerformed
        // TODO add your handling code here:
        // define variables 
        String ordername = null;
        String price = null;
        String quantity = beverageQuantity.getText();
        String totalPrice;
        String orderStatus  = "preparing";
        String orderID = OrderID_generate();
        
        // open order.txt file
        File f = new File ("order.txt");
        try {
            // get value from beverage JTable
            TableModel food_model = beverage_table.getModel();
            int [] index = beverage_table.getSelectedRows();
            Object [] row = new Object[3];
            for (int i = 0; i < index.length; i++) {
                ordername = beverage_table.getValueAt(index[i], 1).toString();
                price = beverage_table.getValueAt(index[i], 2).toString();
            }
            int a = Integer.parseInt(quantity);
            int b = Integer.parseInt(price);
            int c = b * a;
            totalPrice = String.valueOf(c);


            BufferedWriter bw = new BufferedWriter (new FileWriter(f,true));
            BufferedReader br = new BufferedReader (new FileReader(f));
            Order o = new Order(id, ordername, price, beverageQuantity.getText(), totalPrice, orderStatus);
            bw.write(o.getOrderName()+","+o.getPrice()+","+o.getQuantity()+","+o.getTotalPrice()+","+orderID+","+o.getOrderStatus()+","+o.getCustomerID()+","+"No"+"\n");
            bw.close();
            JOptionPane.showMessageDialog(this, "Successful Add to order");
            // order summary JTable
            DefaultTableModel model = (DefaultTableModel)summary_table.getModel();
                model.setRowCount(0);
                String line;
                while((line=br.readLine())!=null){
                    if (line.contains(id) && line.contains("No")) {
                        String[] data = line.split(",");
                        model.addRow(data);
                    }
                }
                
            // sum the total price of the order 
            int sum = 0;
            for (int j = 0; j < summary_table.getRowCount(); j++) {
                int d = Integer.parseInt((String)summary_table.getValueAt(j, 3));
                sum += d;
            }
            // service charge formula
            double service_charge = sum * 0.06;
            // convert double to string 
            String serviceCharge = Double.toString(service_charge);
            // total payment formula
            total_payment = sum + service_charge;
            // convert double to string
            String totalPayment = Double.toString(total_payment);
            // print the specific data to the text field
            totalPrice_jField.setText("RM " + String.valueOf(sum));
            serviceCharge_jField.setText("RM " + serviceCharge.format("%.2f", service_charge));
            totalPayment_jField.setText("RM " + totalPayment.format("%.2f", total_payment));   

            beverageQuantity.setText(null);
            beverage_table.clearSelection();
            order_button.setEnabled(true);
             
        } catch (FileNotFoundException ex) {
            Logger.getLogger(order_menu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(order_menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addBeverageActionPerformed

    // back to customer home
    private void back_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_buttonActionPerformed
        // TODO add your handling code here:
        this.dispose();
        customer_home ch = new customer_home();
        ch.setVisible(true);
    }//GEN-LAST:event_back_buttonActionPerformed

    // food quantity text field enable when food JTable row was selected
    private void food_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_food_tableMouseClicked
        // TODO add your handling code here:
        foodQuantity.setEnabled(true);
    }//GEN-LAST:event_food_tableMouseClicked

    // beverage quantity text field enable when beverage JTable row was selected
    private void beverage_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_beverage_tableMouseClicked
        // TODO add your handling code here:
        beverageQuantity.setEnabled(true);
    }//GEN-LAST:event_beverage_tableMouseClicked

    // food quantity validation
    private void foodQuantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_foodQuantityKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[1-9][0-9]{0,1}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(foodQuantity.getText());
        if (!match.matches()) {
            food_nlab.setText("Quantity is incorrect!");
        }
        else {
            food_nlab.setText(null);
            addFood.setEnabled(true);
        }
    }//GEN-LAST:event_foodQuantityKeyReleased

    // beverage quantity validation
    private void beverageQuantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_beverageQuantityKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[1-9][0-9]{0,1}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(beverageQuantity.getText());
        if (!match.matches()) {
            beverage_nlab.setText("Quantity is incorrect!");
        }
        else {
            beverage_nlab.setText(null);
            addBeverage.setEnabled(true);
        }
    }//GEN-LAST:event_beverageQuantityKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(order_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(order_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(order_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(order_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new order_menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBeverage;
    private javax.swing.JButton addFood;
    private javax.swing.JButton back_button;
    private javax.swing.JTextField beverageQuantity;
    private javax.swing.JLabel beverage_nlab;
    private javax.swing.JTable beverage_table;
    private javax.swing.JLabel food13;
    private javax.swing.JLabel food14;
    private javax.swing.JLabel food15;
    private javax.swing.JTextField foodQuantity;
    private javax.swing.JLabel food_nlab;
    private javax.swing.JTable food_table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton order_button;
    private javax.swing.JLabel serviceCharge_jField;
    private javax.swing.JTable summary_table;
    private javax.swing.JLabel totalPayment_jField;
    private javax.swing.JLabel totalPrice_jField;
    private javax.swing.JLabel welcome_label;
    // End of variables declaration//GEN-END:variables
}
