/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ordering.system;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ROG
 */
public class manage_menu extends javax.swing.JFrame {

    /**
     * Creates new form Manage_Menu
     */
    public manage_menu() {
        initComponents();
        // set the JFrame to center position
        this.setLocationRelativeTo(null);
        // disable the button or text field
        add_button.setEnabled(false);
        price_txtField.setEnabled(false);
        itemID_txtField.setEnabled(false);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        name_txtField = new javax.swing.JTextField();
        price_txtField = new javax.swing.JTextField();
        type_combo = new javax.swing.JComboBox<>();
        itemID_txtField = new javax.swing.JTextField();
        add_button = new javax.swing.JButton();
        cancel_button = new javax.swing.JButton();
        nlab = new javax.swing.JLabel();
        nlab2 = new javax.swing.JLabel();
        nlab1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        item_table = new javax.swing.JTable();
        update_button = new javax.swing.JButton();
        delete_button = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        back_button = new javax.swing.JButton();
        searchType_combo = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 2, 48)); // NOI18N
        jLabel1.setText("Manage Menu");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(40, 40, 40))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel3.setText("Type:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel4.setText("Name:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel5.setText("Item ID:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel6.setText("Price:");

        name_txtField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                name_txtFieldKeyReleased(evt);
            }
        });

        price_txtField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                price_txtFieldKeyReleased(evt);
            }
        });

        type_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--- Select Item Type ---", "Food", "Beverage" }));
        type_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                type_comboActionPerformed(evt);
            }
        });

        itemID_txtField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                itemID_txtFieldKeyReleased(evt);
            }
        });

        add_button.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        add_button.setText("Add");
        add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_buttonActionPerformed(evt);
            }
        });

        cancel_button.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cancel_button.setText("Cancel");
        cancel_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_buttonActionPerformed(evt);
            }
        });

        nlab.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        nlab.setForeground(java.awt.Color.red);

        nlab2.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        nlab2.setForeground(java.awt.Color.red);

        nlab1.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        nlab1.setForeground(java.awt.Color.red);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(14, 14, 14)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(itemID_txtField)
                    .addComponent(price_txtField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(name_txtField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nlab, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nlab1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(add_button)
                        .addGap(18, 18, 18)
                        .addComponent(cancel_button)
                        .addGap(0, 4, Short.MAX_VALUE))
                    .addComponent(type_combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nlab2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name_txtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nlab, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(price_txtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nlab1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(type_combo))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemID_txtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(nlab2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_button)
                    .addComponent(cancel_button))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Add Menu Item");

        item_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ItemID", "ItemName", "Price", "Type "
            }
        ));
        item_table.getTableHeader().setReorderingAllowed(false);
        item_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                item_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(item_table);

        update_button.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        update_button.setText("Update");
        update_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_buttonActionPerformed(evt);
            }
        });

        delete_button.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        delete_button.setText("Delete");
        delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_buttonActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("Menu Item");

        back_button.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        back_button.setText("Back");
        back_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_buttonActionPerformed(evt);
            }
        });

        searchType_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--- Select Item Type ---", "Food", "Beverage", "All" }));
        searchType_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchType_comboActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel8.setText("Categorize:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(166, 166, 166)
                                .addComponent(update_button)
                                .addGap(18, 18, 18)
                                .addComponent(delete_button))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(searchType_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(back_button)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(55, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(274, 274, 274))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(searchType_combo)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(update_button)
                            .addComponent(delete_button))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(back_button)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // back to manager home
    private void back_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_buttonActionPerformed
        // TODO add your handling code here:
        manager_home mh = new manager_home();
        mh.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_back_buttonActionPerformed

    // add button
    private void add_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_buttonActionPerformed
        // TODO add your handling code here:
        String type = null;
        try {
            // open item.txt file
            File f = new File("item.txt");
            BufferedWriter bw = new BufferedWriter(new FileWriter(f,true));
            BufferedReader br = new BufferedReader(new FileReader(f));
            if (type_combo.getSelectedItem().equals("Food")) {
                type = "Food";
                
            } else if (type_combo.getSelectedItem().equals("Beverage")) {
                type = "Beverage";
            }
            // add item, it will stores in item.txt file
            if (type_combo.getSelectedItem().equals("Food")) {
                Food fd = new Food(name_txtField.getText(), price_txtField.getText());
                bw.write(fd.getFoodID()+itemID_txtField.getText()+","+fd.getItemName()+","+fd.getPrice()+","+fd.getItemType()+"\n");
                bw.close();
                JOptionPane.showMessageDialog(this, "Successful Add Item");
                // add the details to JTable
                DefaultTableModel model = (DefaultTableModel)item_table.getModel();
                model.setRowCount(0);
                String line;
                while((line=br.readLine())!=null){
                        String[] data = line.split(",");
                        model.addRow(data);
                }
            }
            else if (type_combo.getSelectedItem().equals("Beverage")) {
                Beverage bg = new Beverage(name_txtField.getText(), price_txtField.getText());
                bw.write(bg.getBeverageID()+itemID_txtField.getText()+","+bg.getItemName()+","+bg.getPrice()+","+bg.getItemType()+"\n");
                bw.close();
                JOptionPane.showMessageDialog(this, "Successful Add Item");
                // add the details to JTable
                DefaultTableModel model = (DefaultTableModel)item_table.getModel();
                model.setRowCount(0);
                String line;
                while((line=br.readLine())!=null){
                        String[] data = line.split(",");
                        model.addRow(data);
                }
            }
            // after add clear all the text field to null
            name_txtField.setText(null);
            price_txtField.setText(null);
            type_combo.setSelectedItem("--- Select Item Type ---");
            itemID_txtField.setText(null);
            
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error","Error Box",JOptionPane.ERROR_MESSAGE);;
        }
    }//GEN-LAST:event_add_buttonActionPerformed

    // clear the text field to null
    private void cancel_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel_buttonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)item_table.getModel();
        while(item_table.getRowCount() != 0) {
            model.removeRow(0);
        }
        name_txtField.setText(null);
        price_txtField.setText(null);
        searchType_combo.setSelectedItem("--- Select Item Type ---");
        itemID_txtField.setText(null);
        itemID_txtField.setEnabled(true);
        add_button.setEnabled(true);
    }//GEN-LAST:event_cancel_buttonActionPerformed

    // update button
    private void update_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_buttonActionPerformed
        // TODO add your handling code here:
        
        // define new variables to update
        String new_type = null;
        String new_name = name_txtField.getText();
        String new_price = price_txtField.getText();
        if (type_combo.getSelectedItem().equals("Food")) {
            new_type = "Food";
        } else if (type_combo.getSelectedItem().equals("Beverage")) {
            new_type = "Beverage";
        }
        String updateID = itemID_txtField.getText();
        
        // temporarily store in "tempItem" array list
        ArrayList<String> tempItem = new ArrayList<>();
        try {
            try
            {
                FileReader fr = new FileReader("item.txt");
                Scanner reader = new Scanner (fr);
                
                String line;
                while((line=reader.nextLine())!=null) {
                    String[] data = line.split(",");
                    if (data[0].equals(updateID)) {
                        tempItem.add(
                            data[0]+","+
                            new_name+","+
                            new_price+","+
                            new_type);

                        JOptionPane.showMessageDialog(this, "Successfully Updated");

                        // update the specific row which was selected from JTable
                        int i = item_table.getSelectedRow();
                        DefaultTableModel model = (DefaultTableModel)item_table.getModel();
                        if (i >= 0) 
                        {
                            model.setValueAt(itemID_txtField.getText(), i, 0);
                            model.setValueAt(name_txtField.getText(), i, 1);
                            model.setValueAt(price_txtField.getText(), i, 2);
                            model.setValueAt(type_combo.getSelectedItem(), i, 3);    
                        }
                        
                        // after update clear the text field to null
                        name_txtField.setText(null);
                        price_txtField.setText(null);
                        type_combo.setSelectedItem("--- Select Item Type ---");
                        itemID_txtField.setText(null);
                    }
                    else
                    {
                        tempItem.add(line);
                    }
                fr.close();
                }
            }
            catch(Exception e){
                // JOptionPane.showMessageDialog(this, "Error","Error Box",JOptionPane.ERROR_MESSAGE);;
            }
            try {
                // overwrite user.txt file after update the specific row 
                PrintWriter fw = new PrintWriter("item.txt");

                for(String str : tempItem){
                    fw.println(str);
                }
                fw.close();
            } catch(Exception e){
                // JOptionPane.showMessageDialog(this, "Error","Error Box",JOptionPane.ERROR_MESSAGE);;
            }
        } catch(Exception e) {
            // JOptionPane.showMessageDialog(this, "Error","Error Box",JOptionPane.ERROR_MESSAGE);;
        }
    }//GEN-LAST:event_update_buttonActionPerformed

    // fill in the specific data when the JTable row was selected
    private void item_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_tableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)item_table.getModel();
        int selectedRowIndex = item_table.getSelectedRow();
        
        name_txtField.setText(model.getValueAt(selectedRowIndex, 1).toString());
        price_txtField.setText(model.getValueAt(selectedRowIndex, 2).toString());
        type_combo.setSelectedItem(model.getValueAt(selectedRowIndex, 3).toString());
        itemID_txtField.setText(model.getValueAt(selectedRowIndex, 0).toString());
        itemID_txtField.setEnabled(false);
        add_button.setEnabled(false);
    }//GEN-LAST:event_item_tableMouseClicked

    // delete button
    private void delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_buttonActionPerformed
        // TODO add your handling code here:
        String deleteID = itemID_txtField.getText();
                
        ArrayList<String> tempItem = new ArrayList<>();
        try {
            try
            {
                FileReader fr = new FileReader("item.txt");
                BufferedReader br = new BufferedReader(fr);
                Scanner reader = new Scanner (fr);

                String line;
                while((line=reader.nextLine())!=null) {
                    String[] data = line.split(",");
                    if (data[0].equals(deleteID)) {
                        JOptionPane.showMessageDialog(this, "Successfully Deleted");
                        
                        // remove the specific row which was selected from JTable
                        DefaultTableModel model = (DefaultTableModel)item_table.getModel();
                        int i = item_table.getSelectedRow();
                        if (i >= 0) {
                            model.removeRow(i);
                        }
                        
                        // after delete clear the text field to null
                        name_txtField.setText(null);
                        price_txtField.setText(null);
                        type_combo.setSelectedItem("--- Select Item Type ---");
                        itemID_txtField.setText(null);
                        itemID_txtField.setEnabled(true);
                    }
                    else
                    {
                        tempItem.add(line);
                    }
                }
                fr.close();
            }
            catch(Exception e){
                // JOptionPane.showMessageDialog(this, "Error","Error Box",JOptionPane.ERROR_MESSAGE);;
            }
            try {
                // onverwrite user.txt file after delete the specific row
                PrintWriter fw = new PrintWriter("item.txt");

                for(String str : tempItem){
                    fw.println(str);
                }
                fw.close();
            } catch(Exception e){
                // JOptionPane.showMessageDialog(this, "Error","Error Box",JOptionPane.ERROR_MESSAGE);;
            }
        } catch(Exception e) {
            // JOptionPane.showMessageDialog(this, "Error","Error Box",JOptionPane.ERROR_MESSAGE);;
        }
        
    }//GEN-LAST:event_delete_buttonActionPerformed

    // categorize : food/beverage/all
    private void searchType_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchType_comboActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) item_table.getModel();
        while(item_table.getRowCount()!=0){
            model.removeRow(0);
        }
        File f = new File("item.txt");
        try {
            BufferedReader tr = new BufferedReader (new FileReader(f));
            Object[] tableLines = tr.lines().toArray();
            for(int i = 0; i <tableLines.length;i++)
            {
                String line = tableLines[i].toString().trim();
                // select search type JComboBox to categorize the item type
                if(line.contains((String) searchType_combo.getSelectedItem())){
                    String[] dataRow = line.split(",");
                    model.addRow(dataRow);
                } else if (searchType_combo.getSelectedItem().equals("All")) {
                    String[] dataRow = line.split(",");
                    model.addRow(dataRow);
                }
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(manage_menu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(manage_menu.class.getName()).log(Level.SEVERE, null, ex);
        }
          
    }//GEN-LAST:event_searchType_comboActionPerformed

    // item name validation
    private void name_txtFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_name_txtFieldKeyReleased
        // TODO add your handling code here:
        String line; 
        File export_file = new File("item.txt");
        try
        {
            price_txtField.setEnabled(true);
            String PATTERN="^[a-zA-Z0-9 ]{1,30}$";
            Pattern patt = Pattern.compile(PATTERN);
            Matcher match=patt.matcher(name_txtField.getText());
            BufferedReader br = new BufferedReader(new FileReader(export_file));
            while ((line = br.readLine()) != null) {
                String itemData[] = line.split(",");
                if (itemData[1].equals(name_txtField.getText())) {
                    nlab.setText("Name Existed");
                    price_txtField.setEnabled(false);
                }
                else {
                    if(!match.matches()){
                        nlab.setText("Naming is incorrect!");
                        price_txtField.setEnabled(false);
                    }
                    else{
                        nlab.setText(null);
                        price_txtField.setEnabled(true);
                    }
                }
            }
        }catch(IOException Ex){

        }
    }//GEN-LAST:event_name_txtFieldKeyReleased

    // item price validation
    private void price_txtFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_price_txtFieldKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[1-9][0-9]{0,2}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(price_txtField.getText());
        if (!match.matches()) {
            nlab1.setText("Price is incorrect!");
        }
        else {
            nlab1.setText(null);
        }
    }//GEN-LAST:event_price_txtFieldKeyReleased

    // item id validation
    private void itemID_txtFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemID_txtFieldKeyReleased
        // TODO add your handling code here:
        String line;
        File export_file = new File("item.txt");
        try
        {
            add_button.setEnabled(true);
            String PATTERN="^[0-9]{3}[1-9]$";
            Pattern patt = Pattern.compile(PATTERN);
            Matcher match=patt.matcher(itemID_txtField.getText());
            BufferedReader br = new BufferedReader(new FileReader(export_file));
            if (type_combo.getSelectedItem().equals("Food")) {
                while ((line = br.readLine()) != null) {
                    String itemData [] = line.split(",");
                    if (itemData[0].equals("F"+itemID_txtField.getText())) {
                        nlab2.setText("Food ID Existed");
                        add_button.setEnabled(false);
                    }
                    else {
                        if(!match.matches()){
                            nlab2.setText("It must be integer with 4 digit");
                            add_button.setEnabled(false);
                        }
                        else{
                            nlab2.setText(null);
                            add_button.setEnabled(true);
                        }
                    }
                }
            }
            else if (type_combo.getSelectedItem().equals("Beverage")) {
                while ((line = br.readLine()) != null) {
                    String itemData [] = line.split(",");
                    if (itemData[0].equals("B"+itemID_txtField.getText())) {
                        nlab2.setText("Beverage ID Existed");
                        add_button.setEnabled(false);
                    }
                    else {
                        if(!match.matches()){
                            nlab2.setText("It must be integer with 4 digit");
                            add_button.setEnabled(false);
                        }
                        else{
                            nlab2.setText(null);
                            add_button.setEnabled(true);
                        }
                    }
                }
            }
        }catch(IOException Ex){

        }
    }//GEN-LAST:event_itemID_txtFieldKeyReleased

    private void type_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_type_comboActionPerformed
        // TODO add your handling code here:
        itemID_txtField.setEnabled(true);
        if (type_combo.getSelectedItem().equals("--- Select Item Type ---")) {
            itemID_txtField.setEnabled(false);
        }
    }//GEN-LAST:event_type_comboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(manage_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(manage_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(manage_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(manage_menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new manage_menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_button;
    private javax.swing.JButton back_button;
    private javax.swing.JButton cancel_button;
    private javax.swing.JButton delete_button;
    private javax.swing.JTextField itemID_txtField;
    private javax.swing.JTable item_table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name_txtField;
    private javax.swing.JLabel nlab;
    private javax.swing.JLabel nlab1;
    private javax.swing.JLabel nlab2;
    private javax.swing.JTextField price_txtField;
    private javax.swing.JComboBox<String> searchType_combo;
    private javax.swing.JComboBox<String> type_combo;
    private javax.swing.JButton update_button;
    // End of variables declaration//GEN-END:variables
}
