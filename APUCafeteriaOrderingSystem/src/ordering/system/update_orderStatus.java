/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ordering.system;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.Closeable;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author ROG
 */
public class update_orderStatus extends javax.swing.JFrame {
    /**
     * Creates new form update_orderStatus
     */
    public update_orderStatus() {
        initComponents();
        // set the JFrame to center position
        this.setLocationRelativeTo(null);
        // disable the button
        update_button.setEnabled(false);
        
        // customer id JComboBox
        File export_file = new File("user.txt");
        try {
            BufferedReader br = new BufferedReader(new FileReader(export_file));
            String line;
            while((line=br.readLine())!=null){
                if (line.contains("Customer")) {
                    String[] userData = line.split(",");
                    customer_combo.addItem(userData[0]);
                }
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        orderStatus_table = new javax.swing.JTable();
        customer_combo = new javax.swing.JComboBox<>();
        back_button = new javax.swing.JButton();
        update_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 2, 48)); // NOI18N
        jLabel1.setText("Update Order Status");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        orderStatus_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order", "Price", "Quantity", "Total Price", "OrderID", "Order Status"
            }
        ));
        orderStatus_table.getTableHeader().setReorderingAllowed(false);
        orderStatus_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderStatus_tableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(orderStatus_table);

        customer_combo.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        customer_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--- Select Customer ---" }));
        customer_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_comboActionPerformed(evt);
            }
        });

        back_button.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        back_button.setText("Back");
        back_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_buttonActionPerformed(evt);
            }
        });

        update_button.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        update_button.setText("Update Status");
        update_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(update_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(back_button))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(21, 21, 21)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(210, 210, 210)
                            .addComponent(customer_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(65, 65, 65)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(customer_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(back_button)
                    .addComponent(update_button))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // back to manager home
    private void back_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_buttonActionPerformed
        // TODO add your handling code here:
        manager_home mh = new manager_home();
        mh.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_back_buttonActionPerformed

    // order status JTable
    private void customer_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_comboActionPerformed
        // TODO add your handling code here:
        
        // order status JTable
        DefaultTableModel model = (DefaultTableModel) orderStatus_table.getModel();
        while(orderStatus_table.getRowCount()!=0){
            model.removeRow(0);
        }
        
        File file = new File("order.txt");
        try {
            BufferedReader br = new BufferedReader (new FileReader(file));
            Object[] tableLines = br.lines().toArray();
            for(int i = 0; i <tableLines.length;i++)
            {
                // trim() function removes whitespace from both ends of a string
                String line = tableLines[i].toString().trim();
                // if customer id from the JComboBox was selected, it will shows the customer order  in JTable
                if(line.contains((String) customer_combo.getSelectedItem())){                
                    String[] dataRow = line.split(",");
                    model.addRow(dataRow);                 
                }
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(update_orderStatus.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(update_orderStatus.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_customer_comboActionPerformed

    // select the specific order to update
    private void orderStatus_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderStatus_tableMouseClicked
        // TODO add your handling code here:
        update_button.setEnabled(true);
    }//GEN-LAST:event_orderStatus_tableMouseClicked

    // update button
    private void update_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_buttonActionPerformed
        // TODO add your handling code here:

        String orderID = null;
        // define oldfile and tempfile of order file
        String oldFileName = "order.txt";
        String tmpFileName = "lOrder.txt";
        
        // define buffered reader and writer of order file
        BufferedReader br = null;
        BufferedWriter bw = null;
        
        // read all the details of oldfile and write to tempfile
        try {
            br = new BufferedReader(new FileReader(oldFileName));
            bw = new BufferedWriter(new FileWriter(tmpFileName));
   
            // get the specific value from JTable mouse clicked row
            TableModel orderModel = orderStatus_table.getModel();
            int [] index = orderStatus_table.getSelectedRows();
            Object [] row = new Object[5];
            for (int i = 0; i < index.length; i++) {
                String ordername = orderStatus_table.getValueAt(index[i], 0).toString();
                String price = orderStatus_table.getValueAt(index[i], 1).toString();
                String quantity = orderStatus_table.getValueAt(index[i], 2).toString();
                String totalPrice = orderStatus_table.getValueAt(index[i], 3).toString();
                orderID = orderStatus_table.getValueAt(index[i], 4).toString();
                String orderStatus = orderStatus_table.getValueAt(index[i], 5).toString();
            }
            
            // replace the order status which is "preparing" with "ready" 
            // then update the JTable specific row from preparing to ready
            String line;
            while ((line = br.readLine()) != null) {
                if (line.contains(orderID)) {
                    if (line.contains("preparing")) {
                        line = line.replace("preparing", "ready");
                        int i = orderStatus_table.getSelectedRow();
                        DefaultTableModel model = (DefaultTableModel)orderStatus_table.getModel();
                        if (i >= 0) 
                        {
                            model.setValueAt("ready", i, 5);    
                        }
                    }
                }
            bw.write(line+"\n");
            }
            JOptionPane.showMessageDialog(this, "Update Successful");
            
        } catch (Exception e) {
            return;
        } finally {
            try {
                // close br file
                if(br != null)
                    br.close();
            } catch (IOException e) {}
            try {
                // close bw file
                if(bw != null)
                    bw.close();
            } catch (IOException e) {}
        }

        // define new buffered reader and writer of order file
        BufferedReader brr = null;
        BufferedWriter bww = null;
        // replace oldfile with tempfile
        try {
            brr = new BufferedReader(new FileReader(tmpFileName));
            bww = new BufferedWriter(new FileWriter(oldFileName));
            int c=brr.read();
            while (c != -1){
                bww.write(c);
                c=brr.read();
            }
        } catch(IOException e) {
            // it will shows the error line and class name where the exception occured
            e.printStackTrace();
        } finally {
            close(brr);
            close(bww);
        }
    }//GEN-LAST:event_update_buttonActionPerformed
   
    // close the stream, else the underlying channel will remain open and then we would end up with a resource leak
    public static void close(Closeable stream) {
        if (stream != null) {
            try {
                stream.close();
            } catch (IOException ex) {
                Logger.getLogger(update_orderStatus.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(update_orderStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(update_orderStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(update_orderStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(update_orderStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new update_orderStatus().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back_button;
    private javax.swing.JComboBox<String> customer_combo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable orderStatus_table;
    private javax.swing.JButton update_button;
    // End of variables declaration//GEN-END:variables
}
